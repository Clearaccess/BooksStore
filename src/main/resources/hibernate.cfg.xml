<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
        <property name="connection.url">jdbc:mysql://localhost:3306/books_store?serverTimezone=UTC</property>
        <property name="connection.driver_class">com.mysql.cj.jdbc.Driver</property>

        <!-- NOTE that after automapping with IDEA property username and password will delete -->
        <!--and will be:  Initial SessionFactory failedorg.hibernate.service.spi.ServiceException: Unable to create requested service-->
        <property name="connection.username">root</property>
        <property name="connection.password">89020438921</property>
        <property name="show_sql">true</property>
        <property name="format_sql">true</property>
        <!-- NOTE that after automapping with IDEA property username and password will delete -->
        <mapping class="com.university.books.store.model.entity.AddressEntity"/>
        <mapping class="com.university.books.store.model.entity.BookEntity"/>
        <mapping class="com.university.books.store.model.entity.CategoryEntity"/>
        <mapping class="com.university.books.store.model.entity.CouponEntity"/>
        <mapping class="com.university.books.store.model.entity.DiscountEntity"/>
        <mapping class="com.university.books.store.model.entity.OrderEntity"/>
        <mapping class="com.university.books.store.model.entity.OrderDetailEntity"/>
        <mapping class="com.university.books.store.model.entity.OrderPaymentEntity"/>
        <mapping class="com.university.books.store.model.entity.PaymentEntity"/>
        <mapping class="com.university.books.store.model.entity.ReviewEntity"/>
        <mapping class="com.university.books.store.model.entity.RoleEntity"/>
        <mapping class="com.university.books.store.model.entity.UserEntity"/>
        <!-- DB schema will be updated if needed -->
        <!-- <property name="hbm2ddl.auto">update</property> -->
    </session-factory>
</hibernate-configuration>